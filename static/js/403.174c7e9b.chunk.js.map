{"version":3,"file":"static/js/403.174c7e9b.chunk.js","mappings":"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","sources":["components/loremSection.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./loremSection.css\";\nimport {\n  Select,\n  makeStyles,\n  InputLabel,\n  MenuItem,\n  TextField,\n  Container,\n  FormControl,\n  Typography,\n  Button,\n  Icon,\n  Snackbar,\n} from \"@material-ui/core\";\nimport WbSunnyIcon from \"@material-ui/icons/WbSunny\";\nimport Brightness2Icon from \"@material-ui/icons/Brightness2\";\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\nimport CopyToClipboard from \"react-copy-to-clipboard\";\n\nconst useStyles = makeStyles({\n  margin: {\n    minWidth: 180,\n    margin: \"12px 0px\",\n    background: \"#ffffff\",\n  },\n  iconStyle: {\n    cursor: \"pointer\",\n  },\n  heading: {\n    textTransform: \"uppercase\",\n  },\n  flexCenterBetween: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n});\n\nfunction LoremSection() {\n  const [formValues, setFormValues] = useState({\n    count: 0,\n    type: \"\",\n  });\n  const [open, setOpen] = useState(false);\n  const [text, setText] = useState([]);\n  const [dark, setDark] = useState(\"\");\n  const classes = useStyles();\n  const switchLight = (theme) => {\n    localStorage.setItem(\"theme\", theme);\n    setDark(theme);\n  };\n\n  const handleSubmit = async (e) => {\n    if (formValues.type === \"\") {\n      return;\n    }\n    const url = `https://hipsum.co/api/?type=${formValues.type}&paras=50`;\n    e.preventDefault();\n    let amount = parseInt(formValues.count);\n    const response = await fetch(url);\n    const newTexts = await response.json();\n\n    //show atleast one paragraph if count == 0\n    if (formValues.count <= 0) {\n      amount = 1;\n    }\n    setText(newTexts.slice(0, amount));\n    //condition if count goes above the total length of the data, it will show all the paragraphs inside your array\n    if (formValues.count > text.length) {\n      amount = text.length;\n    }\n  };\n  const handleSnackClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <div\n        className={\n          (dark === \"dark\" ? \"app__dark\" : \"app__light\") + \" app_basic\"\n        }>\n        <Snackbar\n          anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\n          open={open}\n          onClose={handleSnackClose}\n          autoHideDuration={2500}\n          message={\"Copied to Clipboard!\"}\n        />\n        <Container style={{ marginTop: \"40px\" }} maxWidth={\"lg\"}>\n          <Container maxWidth={\"lg\"} className={classes.flexCenterBetween}>\n            <Typography\n              variant={\"h3\"}\n              className={\n                classes.heading +\n                \" \" +\n                (dark === \"dark\" ? \"head_dark\" : \"head_light\")\n              }>\n              {\"tired of lorem ipsum\"}\n            </Typography>\n            <Icon fontSize={\"large\"}>\n              {dark === \"dark\" ? (\n                <WbSunnyIcon\n                  fontSize={\"large\"}\n                  className={classes.iconStyle}\n                  style={{ color: \"white\" }}\n                  onClick={() => switchLight(\"light\")}\n                />\n              ) : (\n                <Brightness2Icon\n                  fontSize={\"large\"}\n                  className={classes.iconStyle}\n                  onClick={() => {\n                    switchLight(\"dark\");\n                  }}\n                />\n              )}\n            </Icon>\n          </Container>\n          <form\n            className='lorem-form'\n            onSubmit={handleSubmit}\n            style={{ marginTop: 10 }}>\n            <FormControl className={classes.margin} color={\"primary\"}>\n              <TextField\n                type={\"number\"}\n                label={\"Paragraphs\"}\n                variant={\"filled\"}\n                name={\"amount\"}\n                value={formValues.count}\n                onChange={(e) =>\n                  setFormValues({ ...formValues, count: e.target.value })\n                }\n              />\n            </FormControl>\n            <FormControl\n              className={classes.margin}\n              variant={\"filled\"}\n              color={\"primary\"}>\n              <InputLabel htmlFor={\"version-select\"}>\n                {\"Choose version\"}\n              </InputLabel>\n              <Select\n                label={\"choose version\"}\n                color={\"primary\"}\n                value={formValues.type}\n                labelId={\"version-select\"}\n                onChange={(e) =>\n                  setFormValues({ ...formValues, type: e.target.value })\n                }>\n                <MenuItem value={\"hipster-latin\"}>\n                  {\"Hipster Speak Only\"}\n                </MenuItem>\n                <MenuItem value={\"hipster-centric\"}>\n                  {\"Hipster Speak with Latin\"}\n                </MenuItem>\n              </Select>\n            </FormControl>\n            <Button\n              size={\"large\"}\n              type={\"submit\"}\n              variant={\"contained\"}\n              color={\"primary\"}>\n              {\"Generate\"}\n            </Button>\n          </form>\n          <Container\n            maxWidth={\"lg\"}\n            style={\n              dark === \"dark\"\n                ? { color: \"#a9f1df\" }\n                : { color: \"hsl(210, 22%, 49%)\" }\n            }>\n            {text?.length ? (\n              <Container maxWidth={\"lg\"} className={classes.flexCenterBetween}>\n                <CopyToClipboard text={text}>\n                  <Icon\n                    fontSize={\"large\"}\n                    color={\"primary\"}\n                    className={classes.iconStyle}>\n                    <FileCopyIcon\n                      onClick={() => setOpen(true)}\n                      fontSize={\"large\"}\n                    />\n                  </Icon>\n                </CopyToClipboard>\n              </Container>\n            ) : null}\n            <div className={\"lorem-text\"}>\n              {text?.map((item, index) => {\n                return (\n                  <p style={{ marginTop: \"20px\" }} key={index}>\n                    {item}\n                  </p>\n                );\n              })}\n            </div>\n          </Container>\n        </Container>\n      </div>\n    </>\n  );\n}\n\nexport default LoremSection;\n"],"names":["useStyles","makeStyles","margin","minWidth","background","iconStyle","cursor","heading","textTransform","flexCenterBetween","display","justifyContent","alignItems","useState","count","type","formValues","setFormValues","open","setOpen","text","setText","dark","setDark","classes","switchLight","theme","localStorage","setItem","handleSubmit","e","url","preventDefault","amount","parseInt","fetch","response","json","newTexts","slice","length","className","Snackbar","anchorOrigin","vertical","horizontal","onClose","autoHideDuration","message","Container","style","marginTop","maxWidth","Typography","variant","Icon","fontSize","WbSunny","color","onClick","Brightness2","onSubmit","FormControl","TextField","label","name","value","onChange","target","InputLabel","htmlFor","Select","labelId","MenuItem","Button","size","FileCopy","map","item","index"],"sourceRoot":""}